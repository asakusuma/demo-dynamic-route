{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","demo-dynamic-route/tests/test-helper.js","demo-dynamic-route/tests/unit/instance-initializers/add-route-test.js","demo-dynamic-route/tests/unit/routes/new-test.js","demo-dynamic-route/tests/unit/routes/old-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"demo-dynamic-route/tests/test-helper\", [\"demo-dynamic-route/app\", \"demo-dynamic-route/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define(\"demo-dynamic-route/tests/unit/instance-initializers/add-route-test\", [\"demo-dynamic-route/instance-initializers/add-route\", \"qunit\"], function (_addRoute, _qunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Instance Initializer | add-route', function (hooks) {\n    hooks.beforeEach(function () {\n      this.TestApplication = Ember.Application.extend();\n      this.TestApplication.instanceInitializer({\n        name: 'initializer under test',\n        initialize: _addRoute.initialize\n      });\n      this.application = this.TestApplication.create({\n        autoboot: false\n      });\n      this.instance = this.application.buildInstance();\n    });\n    hooks.afterEach(function () {\n      Ember.run(this.instance, 'destroy');\n      Ember.run(this.application, 'destroy');\n    }); // Replace this with your real tests.\n\n    (0, _qunit.test)('it works', async function (assert) {\n      await this.instance.boot();\n      assert.ok(true);\n    });\n  });\n});","define(\"demo-dynamic-route/tests/unit/routes/new-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | new', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:new');\n      assert.ok(route);\n    });\n  });\n});","define(\"demo-dynamic-route/tests/unit/routes/old-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | old', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:old');\n      assert.ok(route);\n    });\n  });\n});","define('demo-dynamic-route/config/environment', [], function() {\n  var prefix = 'demo-dynamic-route';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('demo-dynamic-route/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}